'use strict';var cov_14x0hpggco=function(){var path="/home/andrea/Escritorio/pruebasx/avanza_nodejs/platziverse/platziverse-db/index.js";var hash="e9244ce472a4e4cf46b29db9066c1061cbdf3f91";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/andrea/Escritorio/pruebasx/avanza_nodejs/platziverse/platziverse-db/index.js",statementMap:{"0":{start:{line:3,column:22},end:{line:3,column:41}},"1":{start:{line:4,column:25},end:{line:4,column:51}},"2":{start:{line:5,column:25},end:{line:5,column:51}},"3":{start:{line:6,column:19},end:{line:6,column:41}},"4":{start:{line:7,column:17},end:{line:7,column:36}},"5":{start:{line:9,column:0},end:{line:42,column:1}},"6":{start:{line:10,column:2},end:{line:20,column:4}},"7":{start:{line:22,column:20},end:{line:22,column:41}},"8":{start:{line:23,column:22},end:{line:23,column:46}},"9":{start:{line:24,column:23},end:{line:24,column:47}},"10":{start:{line:26,column:2},end:{line:26,column:35}},"11":{start:{line:27,column:2},end:{line:27,column:37}},"12":{start:{line:29,column:2},end:{line:29,column:32}},"13":{start:{line:31,column:2},end:{line:33,column:3}},"14":{start:{line:32,column:4},end:{line:32,column:41}},"15":{start:{line:35,column:2},end:{line:35,column:18}},"16":{start:{line:37,column:16},end:{line:37,column:50}},"17":{start:{line:38,column:17},end:{line:38,column:19}},"18":{start:{line:39,column:2},end:{line:41,column:3}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:17},end:{line:9,column:18}},loc:{start:{line:9,column:41},end:{line:42,column:1}},line:9}},branchMap:{"0":{loc:{start:{line:31,column:2},end:{line:33,column:3}},type:"if",locations:[{start:{line:31,column:2},end:{line:33,column:3}},{start:{line:31,column:2},end:{line:33,column:3}}],line:31}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const setupDatabase=(cov_14x0hpggco.s[0]++,require('./lib/db'));const setupAgenteModel=(cov_14x0hpggco.s[1]++,require('./models/agente'));const setupModelsModel=(cov_14x0hpggco.s[2]++,require('./models/metric'));const setupAgent=(cov_14x0hpggco.s[3]++,require('./lib/agent'));const defautls=(cov_14x0hpggco.s[4]++,require('defaults'));cov_14x0hpggco.s[5]++;module.exports=async function(config){cov_14x0hpggco.f[0]++;cov_14x0hpggco.s[6]++;config=defautls(config,{dialect:'sqlite',pool:{max:10,min:0,idle:10000},query:{raw:true}});const sequelize=(cov_14x0hpggco.s[7]++,setupDatabase(config));const AgenteModel=(cov_14x0hpggco.s[8]++,setupAgenteModel(config));const MetricsModel=(cov_14x0hpggco.s[9]++,setupModelsModel(config));cov_14x0hpggco.s[10]++;AgenteModel.hasMany(MetricsModel);cov_14x0hpggco.s[11]++;MetricsModel.belongsTo(AgenteModel);cov_14x0hpggco.s[12]++;await sequelize.authenticate();cov_14x0hpggco.s[13]++;if(config.setup){cov_14x0hpggco.b[0][0]++;cov_14x0hpggco.s[14]++;await sequelize.sync({force:true});}else{cov_14x0hpggco.b[0][1]++;}cov_14x0hpggco.s[15]++;sequelize.sync();const Agent=(cov_14x0hpggco.s[16]++,setupAgent(AgeAgenteModelnteModel));const Metric=(cov_14x0hpggco.s[17]++,{});cov_14x0hpggco.s[18]++;return{Agent,Metric};};