'use strict';

var _powerAssertVisitorKeys = "{\"ArrayExpression\":[\"elements\"],\"AssignmentExpression\":[\"left\",\"right\"],\"BinaryExpression\":[\"left\",\"right\"],\"InterpreterDirective\":[],\"Directive\":[\"value\"],\"DirectiveLiteral\":[],\"BlockStatement\":[\"directives\",\"body\"],\"BreakStatement\":[\"label\"],\"CallExpression\":[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],\"CatchClause\":[\"param\",\"body\"],\"ConditionalExpression\":[\"test\",\"consequent\",\"alternate\"],\"ContinueStatement\":[\"label\"],\"DebuggerStatement\":[],\"DoWhileStatement\":[\"test\",\"body\"],\"EmptyStatement\":[],\"ExpressionStatement\":[\"expression\"],\"File\":[\"program\"],\"ForInStatement\":[\"left\",\"right\",\"body\"],\"ForStatement\":[\"init\",\"test\",\"update\",\"body\"],\"FunctionDeclaration\":[\"id\",\"params\",\"body\",\"returnType\",\"typeParameters\"],\"FunctionExpression\":[\"id\",\"params\",\"body\",\"returnType\",\"typeParameters\"],\"Identifier\":[\"typeAnnotation\",\"decorators\"],\"IfStatement\":[\"test\",\"consequent\",\"alternate\"],\"LabeledStatement\":[\"label\",\"body\"],\"StringLiteral\":[],\"NumericLiteral\":[],\"NullLiteral\":[],\"BooleanLiteral\":[],\"RegExpLiteral\":[],\"LogicalExpression\":[\"left\",\"right\"],\"MemberExpression\":[\"object\",\"property\"],\"NewExpression\":[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],\"Program\":[\"directives\",\"body\"],\"ObjectExpression\":[\"properties\"],\"ObjectMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"ObjectProperty\":[\"key\",\"value\",\"decorators\"],\"RestElement\":[\"argument\",\"typeAnnotation\"],\"ReturnStatement\":[\"argument\"],\"SequenceExpression\":[\"expressions\"],\"ParenthesizedExpression\":[\"expression\"],\"SwitchCase\":[\"test\",\"consequent\"],\"SwitchStatement\":[\"discriminant\",\"cases\"],\"ThisExpression\":[],\"ThrowStatement\":[\"argument\"],\"TryStatement\":[\"block\",\"handler\",\"finalizer\"],\"UnaryExpression\":[\"argument\"],\"UpdateExpression\":[\"argument\"],\"VariableDeclaration\":[\"declarations\"],\"VariableDeclarator\":[\"id\",\"init\"],\"WhileStatement\":[\"test\",\"body\"],\"WithStatement\":[\"object\",\"body\"],\"AssignmentPattern\":[\"left\",\"right\",\"decorators\"],\"ArrayPattern\":[\"elements\",\"typeAnnotation\"],\"ArrowFunctionExpression\":[\"params\",\"body\",\"returnType\",\"typeParameters\"],\"ClassBody\":[\"body\"],\"ClassDeclaration\":[\"id\",\"body\",\"superClass\",\"mixins\",\"typeParameters\",\"superTypeParameters\",\"implements\",\"decorators\"],\"ClassExpression\":[\"id\",\"body\",\"superClass\",\"mixins\",\"typeParameters\",\"superTypeParameters\",\"implements\",\"decorators\"],\"ExportAllDeclaration\":[\"source\"],\"ExportDefaultDeclaration\":[\"declaration\"],\"ExportNamedDeclaration\":[\"declaration\",\"specifiers\",\"source\"],\"ExportSpecifier\":[\"local\",\"exported\"],\"ForOfStatement\":[\"left\",\"right\",\"body\"],\"ImportDeclaration\":[\"specifiers\",\"source\"],\"ImportDefaultSpecifier\":[\"local\"],\"ImportNamespaceSpecifier\":[\"local\"],\"ImportSpecifier\":[\"local\",\"imported\"],\"MetaProperty\":[\"meta\",\"property\"],\"ClassMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"ObjectPattern\":[\"properties\",\"typeAnnotation\",\"decorators\"],\"SpreadElement\":[\"argument\"],\"Super\":[],\"TaggedTemplateExpression\":[\"tag\",\"quasi\"],\"TemplateElement\":[],\"TemplateLiteral\":[\"quasis\",\"expressions\"],\"YieldExpression\":[\"argument\"],\"AnyTypeAnnotation\":[],\"ArrayTypeAnnotation\":[\"elementType\"],\"BooleanTypeAnnotation\":[],\"BooleanLiteralTypeAnnotation\":[],\"NullLiteralTypeAnnotation\":[],\"ClassImplements\":[\"id\",\"typeParameters\"],\"DeclareClass\":[\"id\",\"typeParameters\",\"extends\",\"mixins\",\"implements\",\"body\"],\"DeclareFunction\":[\"id\"],\"DeclareInterface\":[\"id\",\"typeParameters\",\"extends\",\"mixins\",\"implements\",\"body\"],\"DeclareModule\":[\"id\",\"body\"],\"DeclareModuleExports\":[\"typeAnnotation\"],\"DeclareTypeAlias\":[\"id\",\"typeParameters\",\"right\"],\"DeclareOpaqueType\":[\"id\",\"typeParameters\",\"supertype\"],\"DeclareVariable\":[\"id\"],\"DeclareExportDeclaration\":[\"declaration\",\"specifiers\",\"source\"],\"DeclareExportAllDeclaration\":[\"source\"],\"DeclaredPredicate\":[\"value\"],\"ExistsTypeAnnotation\":[],\"FunctionTypeAnnotation\":[\"typeParameters\",\"params\",\"rest\",\"returnType\"],\"FunctionTypeParam\":[\"name\",\"typeAnnotation\"],\"GenericTypeAnnotation\":[\"id\",\"typeParameters\"],\"InferredPredicate\":[],\"InterfaceExtends\":[\"id\",\"typeParameters\"],\"InterfaceDeclaration\":[\"id\",\"typeParameters\",\"extends\",\"mixins\",\"implements\",\"body\"],\"InterfaceTypeAnnotation\":[\"extends\",\"body\"],\"IntersectionTypeAnnotation\":[\"types\"],\"MixedTypeAnnotation\":[],\"EmptyTypeAnnotation\":[],\"NullableTypeAnnotation\":[\"typeAnnotation\"],\"NumberLiteralTypeAnnotation\":[],\"NumberTypeAnnotation\":[],\"ObjectTypeAnnotation\":[\"properties\",\"indexers\",\"callProperties\",\"internalSlots\"],\"ObjectTypeInternalSlot\":[\"id\",\"value\",\"optional\",\"static\",\"method\"],\"ObjectTypeCallProperty\":[\"value\"],\"ObjectTypeIndexer\":[\"id\",\"key\",\"value\",\"variance\"],\"ObjectTypeProperty\":[\"key\",\"value\",\"variance\"],\"ObjectTypeSpreadProperty\":[\"argument\"],\"OpaqueType\":[\"id\",\"typeParameters\",\"supertype\",\"impltype\"],\"QualifiedTypeIdentifier\":[\"id\",\"qualification\"],\"StringLiteralTypeAnnotation\":[],\"StringTypeAnnotation\":[],\"ThisTypeAnnotation\":[],\"TupleTypeAnnotation\":[\"types\"],\"TypeofTypeAnnotation\":[\"argument\"],\"TypeAlias\":[\"id\",\"typeParameters\",\"right\"],\"TypeAnnotation\":[\"typeAnnotation\"],\"TypeCastExpression\":[\"expression\",\"typeAnnotation\"],\"TypeParameter\":[\"bound\",\"default\",\"variance\"],\"TypeParameterDeclaration\":[\"params\"],\"TypeParameterInstantiation\":[\"params\"],\"UnionTypeAnnotation\":[\"types\"],\"Variance\":[],\"VoidTypeAnnotation\":[],\"JSXAttribute\":[\"name\",\"value\"],\"JSXClosingElement\":[\"name\"],\"JSXElement\":[\"openingElement\",\"children\",\"closingElement\"],\"JSXEmptyExpression\":[],\"JSXExpressionContainer\":[\"expression\"],\"JSXSpreadChild\":[\"expression\"],\"JSXIdentifier\":[],\"JSXMemberExpression\":[\"object\",\"property\"],\"JSXNamespacedName\":[\"namespace\",\"name\"],\"JSXOpeningElement\":[\"name\",\"attributes\"],\"JSXSpreadAttribute\":[\"argument\"],\"JSXText\":[],\"JSXFragment\":[\"openingFragment\",\"children\",\"closingFragment\"],\"JSXOpeningFragment\":[],\"JSXClosingFragment\":[],\"Noop\":[],\"Placeholder\":[],\"ArgumentPlaceholder\":[],\"AwaitExpression\":[\"argument\"],\"BindExpression\":[\"object\",\"callee\"],\"ClassProperty\":[\"key\",\"value\",\"typeAnnotation\",\"decorators\"],\"OptionalMemberExpression\":[\"object\",\"property\"],\"PipelineTopicExpression\":[\"expression\"],\"PipelineBareFunction\":[\"callee\"],\"PipelinePrimaryTopicReference\":[],\"OptionalCallExpression\":[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],\"ClassPrivateProperty\":[\"key\",\"value\"],\"ClassPrivateMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"Import\":[],\"Decorator\":[\"expression\"],\"DoExpression\":[\"body\"],\"ExportDefaultSpecifier\":[\"exported\"],\"ExportNamespaceSpecifier\":[\"exported\"],\"PrivateName\":[\"id\"],\"BigIntLiteral\":[],\"TSParameterProperty\":[\"parameter\"],\"TSDeclareFunction\":[\"id\",\"typeParameters\",\"params\",\"returnType\"],\"TSDeclareMethod\":[\"decorators\",\"key\",\"typeParameters\",\"params\",\"returnType\"],\"TSQualifiedName\":[\"left\",\"right\"],\"TSCallSignatureDeclaration\":[\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSConstructSignatureDeclaration\":[\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSPropertySignature\":[\"key\",\"typeAnnotation\",\"initializer\"],\"TSMethodSignature\":[\"key\",\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSIndexSignature\":[\"parameters\",\"typeAnnotation\"],\"TSAnyKeyword\":[],\"TSUnknownKeyword\":[],\"TSNumberKeyword\":[],\"TSObjectKeyword\":[],\"TSBooleanKeyword\":[],\"TSStringKeyword\":[],\"TSSymbolKeyword\":[],\"TSVoidKeyword\":[],\"TSUndefinedKeyword\":[],\"TSNullKeyword\":[],\"TSNeverKeyword\":[],\"TSThisType\":[],\"TSFunctionType\":[\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSConstructorType\":[\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSTypeReference\":[\"typeName\",\"typeParameters\"],\"TSTypePredicate\":[\"parameterName\",\"typeAnnotation\"],\"TSTypeQuery\":[\"exprName\"],\"TSTypeLiteral\":[\"members\"],\"TSArrayType\":[\"elementType\"],\"TSTupleType\":[\"elementTypes\"],\"TSOptionalType\":[\"typeAnnotation\"],\"TSRestType\":[\"typeAnnotation\"],\"TSUnionType\":[\"types\"],\"TSIntersectionType\":[\"types\"],\"TSConditionalType\":[\"checkType\",\"extendsType\",\"trueType\",\"falseType\"],\"TSInferType\":[\"typeParameter\"],\"TSParenthesizedType\":[\"typeAnnotation\"],\"TSTypeOperator\":[\"typeAnnotation\"],\"TSIndexedAccessType\":[\"objectType\",\"indexType\"],\"TSMappedType\":[\"typeParameter\",\"typeAnnotation\"],\"TSLiteralType\":[\"literal\"],\"TSExpressionWithTypeArguments\":[\"expression\",\"typeParameters\"],\"TSInterfaceDeclaration\":[\"id\",\"typeParameters\",\"extends\",\"body\"],\"TSInterfaceBody\":[\"body\"],\"TSTypeAliasDeclaration\":[\"id\",\"typeParameters\",\"typeAnnotation\"],\"TSAsExpression\":[\"expression\",\"typeAnnotation\"],\"TSTypeAssertion\":[\"typeAnnotation\",\"expression\"],\"TSEnumDeclaration\":[\"id\",\"members\"],\"TSEnumMember\":[\"id\",\"initializer\"],\"TSModuleDeclaration\":[\"id\",\"body\"],\"TSModuleBlock\":[\"body\"],\"TSImportType\":[\"argument\",\"qualifier\",\"typeParameters\"],\"TSImportEqualsDeclaration\":[\"id\",\"moduleReference\"],\"TSExternalModuleReference\":[\"expression\"],\"TSNonNullExpression\":[\"expression\"],\"TSExportAssignment\":[\"expression\"],\"TSNamespaceExportDeclaration\":[\"id\"],\"TSTypeAnnotation\":[\"typeAnnotation\"],\"TSTypeParameterInstantiation\":[\"params\"],\"TSTypeParameterDeclaration\":[\"params\"],\"TSTypeParameter\":[\"constraint\",\"default\"]}",
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

const test = require('ava');

const proxyquire = require('proxyquire');

const sinon = require('sinon');

const agentFixtures = require('./fixtures/agent');

let config = {
  logging: function () {}
};
let MetricStub = {
  belongsTo: sinon.spy()
};
let id = 1;
let single = Object.assign({}, agentFixtures.single);
let AgentStub = null;
let db = null;
let sandbox = null;
test.beforeEach(async () => {
  sandbox = sinon.sandbox.create();
  AgentStub = {
    hasMany: sandbox.spy()
  };
  const setupDatabase = proxyquire('../', {
    './models/agente': () => AgentStub,
    './models/metric': () => MetricStub
  });
  db = await setupDatabase(config);
});
test.afterEach(() => {
  sandbox && sinon.sandbox.restore();
});
/*test('Agent', t => {
  t.truthy(db.Agent, 'Agent Exist')
})*/

test.serial('Setup', t => {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder(),
      _rec3 = new _powerAssertRecorder(),
      _rec4 = new _powerAssertRecorder();

  t.true(_rec._expr(_rec._capt(_rec._capt(_rec._capt(AgentStub, "arguments/0/object/object").hasMany, "arguments/0/object").called, "arguments/0"), {
    content: "t.true(AgentStub.hasMany.called, 'AgenntModel.hasMany was execute')",
    filepath: "tests/agent-test.js",
    line: 40,
    ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"AgentStub\",\"range\":[7,16]},\"property\":{\"type\":\"Identifier\",\"name\":\"hasMany\",\"range\":[17,24]},\"computed\":false,\"range\":[7,24]},\"property\":{\"type\":\"Identifier\",\"name\":\"called\",\"range\":[25,31]},\"computed\":false,\"range\":[7,31]},{\"type\":\"StringLiteral\",\"value\":\"AgenntModel.hasMany was execute\",\"range\":[33,66]}],\"range\":[0,67]}",
    tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"AgentStub\",\"range\":[7,16]},{\"type\":{\"label\":\".\"},\"range\":[16,17]},{\"type\":{\"label\":\"name\"},\"value\":\"hasMany\",\"range\":[17,24]},{\"type\":{\"label\":\".\"},\"range\":[24,25]},{\"type\":{\"label\":\"name\"},\"value\":\"called\",\"range\":[25,31]},{\"type\":{\"label\":\",\"},\"range\":[31,32]},{\"type\":{\"label\":\"string\"},\"value\":\"AgenntModel.hasMany was execute\",\"range\":[33,66]},{\"type\":{\"label\":\")\"},\"range\":[66,67]}]",
    visitorKeys: _powerAssertVisitorKeys
  }), 'AgenntModel.hasMany was execute');
  t.true(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(AgentStub, "arguments/0/callee/object/object").hasMany, "arguments/0/callee/object").calledWith(_rec2._capt(MetricStub, "arguments/0/arguments/0")), "arguments/0"), {
    content: "t.true(AgentStub.hasMany.calledWith(MetricStub), 'Agument needs to be the model')",
    filepath: "tests/agent-test.js",
    line: 41,
    ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"AgentStub\",\"range\":[7,16]},\"property\":{\"type\":\"Identifier\",\"name\":\"hasMany\",\"range\":[17,24]},\"computed\":false,\"range\":[7,24]},\"property\":{\"type\":\"Identifier\",\"name\":\"calledWith\",\"range\":[25,35]},\"computed\":false,\"range\":[7,35]},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"MetricStub\",\"range\":[36,46]}],\"range\":[7,47]},{\"type\":\"StringLiteral\",\"value\":\"Agument needs to be the model\",\"range\":[49,80]}],\"range\":[0,81]}",
    tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"AgentStub\",\"range\":[7,16]},{\"type\":{\"label\":\".\"},\"range\":[16,17]},{\"type\":{\"label\":\"name\"},\"value\":\"hasMany\",\"range\":[17,24]},{\"type\":{\"label\":\".\"},\"range\":[24,25]},{\"type\":{\"label\":\"name\"},\"value\":\"calledWith\",\"range\":[25,35]},{\"type\":{\"label\":\"(\"},\"range\":[35,36]},{\"type\":{\"label\":\"name\"},\"value\":\"MetricStub\",\"range\":[36,46]},{\"type\":{\"label\":\")\"},\"range\":[46,47]},{\"type\":{\"label\":\",\"},\"range\":[47,48]},{\"type\":{\"label\":\"string\"},\"value\":\"Agument needs to be the model\",\"range\":[49,80]},{\"type\":{\"label\":\")\"},\"range\":[80,81]}]",
    visitorKeys: _powerAssertVisitorKeys
  }), 'Agument needs to be the model');
  t.true(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(MetricStub, "arguments/0/callee/object/object").belongsTo, "arguments/0/callee/object").calledWith(_rec3._capt(AgentStub, "arguments/0/arguments/0")), "arguments/0"), {
    content: "t.true(MetricStub.belongsTo.calledWith(AgentStub), 'Agument needs to be the model')",
    filepath: "tests/agent-test.js",
    line: 42,
    ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"MetricStub\",\"range\":[7,17]},\"property\":{\"type\":\"Identifier\",\"name\":\"belongsTo\",\"range\":[18,27]},\"computed\":false,\"range\":[7,27]},\"property\":{\"type\":\"Identifier\",\"name\":\"calledWith\",\"range\":[28,38]},\"computed\":false,\"range\":[7,38]},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"AgentStub\",\"range\":[39,48]}],\"range\":[7,49]},{\"type\":\"StringLiteral\",\"value\":\"Agument needs to be the model\",\"range\":[51,82]}],\"range\":[0,83]}",
    tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"MetricStub\",\"range\":[7,17]},{\"type\":{\"label\":\".\"},\"range\":[17,18]},{\"type\":{\"label\":\"name\"},\"value\":\"belongsTo\",\"range\":[18,27]},{\"type\":{\"label\":\".\"},\"range\":[27,28]},{\"type\":{\"label\":\"name\"},\"value\":\"calledWith\",\"range\":[28,38]},{\"type\":{\"label\":\"(\"},\"range\":[38,39]},{\"type\":{\"label\":\"name\"},\"value\":\"AgentStub\",\"range\":[39,48]},{\"type\":{\"label\":\")\"},\"range\":[48,49]},{\"type\":{\"label\":\",\"},\"range\":[49,50]},{\"type\":{\"label\":\"string\"},\"value\":\"Agument needs to be the model\",\"range\":[51,82]},{\"type\":{\"label\":\")\"},\"range\":[82,83]}]",
    visitorKeys: _powerAssertVisitorKeys
  }), 'Agument needs to be the model');
  t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(MetricStub, "arguments/0/object/object").belongsTo, "arguments/0/object").called, "arguments/0"), {
    content: "t.true(MetricStub.belongsTo.called, 'MetricModel.hasMany was execute')",
    filepath: "tests/agent-test.js",
    line: 43,
    ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"MetricStub\",\"range\":[7,17]},\"property\":{\"type\":\"Identifier\",\"name\":\"belongsTo\",\"range\":[18,27]},\"computed\":false,\"range\":[7,27]},\"property\":{\"type\":\"Identifier\",\"name\":\"called\",\"range\":[28,34]},\"computed\":false,\"range\":[7,34]},{\"type\":\"StringLiteral\",\"value\":\"MetricModel.hasMany was execute\",\"range\":[36,69]}],\"range\":[0,70]}",
    tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"MetricStub\",\"range\":[7,17]},{\"type\":{\"label\":\".\"},\"range\":[17,18]},{\"type\":{\"label\":\"name\"},\"value\":\"belongsTo\",\"range\":[18,27]},{\"type\":{\"label\":\".\"},\"range\":[27,28]},{\"type\":{\"label\":\"name\"},\"value\":\"called\",\"range\":[28,34]},{\"type\":{\"label\":\",\"},\"range\":[34,35]},{\"type\":{\"label\":\"string\"},\"value\":\"MetricModel.hasMany was execute\",\"range\":[36,69]},{\"type\":{\"label\":\")\"},\"range\":[69,70]}]",
    visitorKeys: _powerAssertVisitorKeys
  }), 'MetricModel.hasMany was execute');
});
test.serial('Agent#findByID', async t => {
  let agent = await db.Agent.findById(id);
  t.deepEqual(agent, agentFixtures.byId(id), 'should be the same');
});
//# sourceMappingURL=/home/andrea/Escritorio/pruebasx/avanza_nodejs/platziverse/platziverse-db/node_modules/.cache/ava/8970da575a6579933f1f6d422bf47664.js.map